{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,SACnCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAsB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,MA7BPR,EAAUgB,iBAAiB,UAAWC,IACpCA,EAAMC,iBACN,MAAMC,EAAaC,OAAOjB,EAAWkB,OAC/BC,EAAYF,OAAOhB,EAAUiB,OAC7BE,EAAcH,OAAOf,EAAYgB,OAGvC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GAAcK,EAAI,GAAKF,GACrCG,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAG/DqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBvB,QAAiBC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputForm = document.querySelector(\".form\");\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\ninputForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const delayValue = Number(firstDelay.value);\n  const stepValue = Number(delayStep.value);\n  const amountValue = Number(amountInput.value);\n  // console.log(stepValue, delayValue, amountValue);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue + (i - 1) * stepValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$inputForm","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.41132a3d.js.map"}