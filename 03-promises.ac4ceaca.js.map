{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,SACnCC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAsB3C,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA7BPR,EAAUgB,iBAAiB,UAAU,SAACC,GACpCA,EAAMC,iBAMN,IALA,IAAMC,EAAaC,OAAOjB,EAAWkB,OAC/BC,EAAYF,OAAOhB,EAAUiB,OAC7BE,EAAcH,OAAOf,EAAYgB,OAG9BG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrClB,EAAckB,EAAGL,GAAcK,EAAI,GAAKF,GACrCG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QAAQ,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,UAGvEuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QAAQ,sBAAuCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputForm = document.querySelector(\".form\");\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst delayStep = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\ninputForm.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  const delayValue = Number(firstDelay.value);\n  const stepValue = Number(delayStep.value);\n  const amountValue = Number(amountInput.value);\n  // console.log(stepValue, delayValue, amountValue);\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue + (i - 1) * stepValue)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        // console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        // console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay })\n      }\n    }, delay);\n  });\n\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$inputForm","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.ac4ceaca.js.map"}